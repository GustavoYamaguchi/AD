filter(week_day == 1)
java_sab <- java_repos %>%
filter(week_day == 7)
java_dom_bs = bootstrap(java_dom,
median(users),
R=5000)
java_dom_bs.interval = java_dom_bs %>%
CI.percentile(probs = c(.025, .975))
java_sab_bs = bootstrap(java_sab,
median(users),
R=5000)
java_sab_bs.interval = java_sab_bs %>%
CI.percentile(probs = c(.025, .975))
df = data.frame(rbind(java_sab_bs.interval, java_dom_bs.interval))
df$medida = c('Sabado', 'Domingo')
df %>%
ggplot(aes(x = medida, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
java_dom <- java_repos %>%
filter(week_day == 1)
java_sab <- java_repos %>%
filter(week_day == 7)
java_dom_bs = bootstrap(java_dom,
median(users),
R=5000)
java_dom_bs.interval = java_dom_bs %>%
CI.percentile(probs = c(.025, .975))
java_sab_bs = bootstrap(java_sab,
median(users),
R=5000)
java_sab_bs.interval = java_sab_bs %>%
CI.percentile(probs = c(.025, .975))
df = data.frame(rbind(java_sab_bs.interval, java_dom_bs.interval))
df$medida = c('Sabado', 'Domingo')
df %>%
ggplot(aes(x = medida, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
java_dom <- java_repos %>%
filter(week_day == 1)
java_sab <- java_repos %>%
filter(week_day == 7)
java_dom_bs = bootstrap(java_dom,
median(users),
R=5000)
java_dom_bs.interval = java_dom_bs %>%
CI.percentile(probs = c(.025, .975))
java_sab_bs = bootstrap(java_sab,
median(users),
R=5000)
java_sab_bs.interval = java_sab_bs %>%
CI.percentile(probs = c(.025, .975))
df = data.frame(rbind(java_sab_bs.interval, java_dom_bs.interval))
df$medida = c('Sabado', 'Domingo')
df %>%
ggplot(aes(x = medida, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
java_dom <- java_repos %>%
filter(week_day == 1)
java_sab <- java_repos %>%
filter(week_day == 7)
java_dom_bs = bootstrap(java_dom,
median(users),
R=5000)
java_dom_bs.interval = java_dom_bs %>%
CI.percentile(probs = c(.025, .975))
java_sab_bs = bootstrap(java_sab,
median(users),
R=5000)
java_sab_bs.interval = java_sab_bs %>%
CI.percentile(probs = c(.025, .975))
df = data.frame(rbind(java_sab_bs.interval, java_dom_bs.interval))
df$medida = c('Sabado', 'Domingo')
df %>%
ggplot(aes(x = medida, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
java_dom <- java_repos %>%
filter(week_day == 1)
java_sab <- java_repos %>%
filter(week_day == 7)
java_dom_bs = bootstrap(java_dom,
median(users),
R=5000)
java_dom_bs.interval = java_dom_bs %>%
CI.percentile(probs = c(.025, .975))
java_sab_bs = bootstrap(java_sab,
median(users),
R=5000)
java_sab_bs.interval = java_sab_bs %>%
CI.percentile(probs = c(.025, .975))
df = data.frame(rbind(java_sab_bs.interval, java_dom_bs.interval))
df$medida = c('Sabado', 'Domingo')
df %>%
ggplot(aes(x = medida, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
java_dom <- java_repos %>%
filter(week_day == 1)
java_sab <- java_repos %>%
filter(week_day == 7)
java_dom_bs = bootstrap(java_dom,
median(users),
R=5000)
java_dom_bs.interval = java_dom_bs %>%
CI.percentile(probs = c(.025, .975))
java_sab_bs = bootstrap(java_sab,
median(users),
R=5000)
java_sab_bs.interval = java_sab_bs %>%
CI.percentile(probs = c(.025, .975))
df = data.frame(rbind(java_sab_bs.interval, java_dom_bs.interval))
df$medida = c('Sabado', 'Domingo')
df %>%
ggplot(aes(x = medida, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
java_dom <- java_repos %>%
filter(week_day == 1)
java_sab <- java_repos %>%
filter(week_day == 7)
java_dom_bs = bootstrap(java_dom,
median(users),
R=5000)
java_dom_bs.interval = java_dom_bs %>%
CI.percentile(probs = c(.025, .975))
java_sab_bs = bootstrap(java_sab,
median(users),
R=5000)
java_sab_bs.interval = java_sab_bs %>%
CI.percentile(probs = c(.025, .975))
df = data.frame(rbind(java_sab_bs.interval, java_dom_bs.interval))
df$medida = c('Sabado', 'Domingo')
df %>%
ggplot(aes(x = medida, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
java_dom <- java_repos %>%
filter(week_day == 1)
java_sab <- java_repos %>%
filter(week_day == 7)
java_dom_bs = bootstrap(java_dom,
median(users),
R=5000)
java_dom_bs.interval = java_dom_bs %>%
CI.percentile(probs = c(.025, .975))
java_sab_bs = bootstrap(java_sab,
median(users),
R=5000)
java_sab_bs.interval = java_sab_bs %>%
CI.percentile(probs = c(.025, .975))
df = data.frame(rbind(java_sab_bs.interval, java_dom_bs.interval))
df$medida = c('Sabado', 'Domingo')
df %>%
ggplot(aes(x = medida, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
java_dom <- java_repos %>%
filter(week_day == 1)
java_sab <- java_repos %>%
filter(week_day == 7)
java_dom_bs = bootstrap(java_dom,
median(users),
R=5000)
java_dom_bs.interval = java_dom_bs %>%
CI.percentile(probs = c(.025, .975))
java_sab_bs = bootstrap(java_sab,
median(users),
R=5000)
java_sab_bs.interval = java_sab_bs %>%
CI.percentile(probs = c(.025, .975))
df = data.frame(rbind(java_sab_bs.interval, java_dom_bs.interval))
df$medida = c('Sabado', 'Domingo')
df %>%
ggplot(aes(x = medida, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
java_repos <- dados_github %>%
filter(file_extension == 'java') %>%
mutate(week_day = wday(ymd(paste(the_year, formatC(the_month, width=2, flag="0"), formatC(month_day, width=2, flag="0")))))
java_2 <- java_repos %>%
filter(week_day == 2)
java_3 <- java_repos %>%
filter(week_day == 3)
java_4 <- java_repos %>%
filter(week_day == 4)
java_5 <- java_repos %>%
filter(week_day == 5)
java_6 <- java_repos %>%
filter(week_day == 6)
#Fazendo boostrap das medianas para popularidade de cada dia.
java_2_bs = bootstrap(java_2,
median(users),
R=5000)
java_2_bs.interval = java_2_bs %>%
CI.percentile(probs = c(.025, .975))
java_3_bs = bootstrap(java_3,
median(users),
R=5000)
java_3_bs.interval = java_3_bs %>%
CI.percentile(probs = c(.025, .975))
java_4_bs = bootstrap(java_4,
median(users),
R=5000)
java_4_bs.interval = java_4_bs %>%
CI.percentile(probs = c(.025, .975))
java_5_bs = bootstrap(java_5,
median(users),
R=5000)
java_5_bs.interval = java_5_bs %>%
CI.percentile(probs = c(.025, .975))
java_6_bs = bootstrap(java_6,
median(users),
R=5000)
java_6_bs.interval = java_6_bs %>%
CI.percentile(probs = c(.025, .975))
df = data.frame(rbind(java_2_bs.interval, java_3_bs.interval, java_4_bs.interval, java_5_bs.interval, java_6_bs.interval))
df$medida = c(2,3,4,5,6)
df %>%
ggplot(aes(x = medida, ymin = X2.5., ymax = X97.5.)) +
geom_errorbar(width = .2)
knitr::opts_chunk$set(echo = TRUE)
library(coin)
java_35 <- rbind(java_3,java_5)
oneway_test(rating ~ as.factor(week_day),
data = java_35,
distribution = "exact")
java_35 <- rbind(java_3,java_5)
View(java_35)
java_35 <- rbind(java_3,java_5)
oneway_test(users ~ as.factor(week_day),
data = java_35,
distribution = "exact")
oneway_test(users ~ as.factor(week_day),
data = java_35,
distribution = "exact") %>%
pvalue()
library(dplyr)
library(plotly)
library(ggplot2)
library(tidyr)
library(readr)
library(lubridate)
library(resample)
library(coin)
dados_github <- read.csv("../dados/github-users-committing-filetypes.csv")
java_35 <- rbind(java_3,java_5)
oneway_test(users ~ as.factor(week_day),
data = java_35,
distribution = "exact")
oneway_test(users ~ as.factor(week_day),
data = java_35,
distribution = "exact") %>%
pvalue()
median_test(users ~ as.factor(week_day),
data = java_35,
distribution = "exact")
median_test(users ~ as.factor(week_day),
data = java_35,
distribution = "exact")
permutationTest2(java_35, median(users), treatment = week_day)$stats %>% t()
median(java_3$users) - median(java_5$users)
median_test(users ~ as.factor(week_day),
data = java_35,
distribution = "exact")
permutationTest2(java_35, median(users), treatment = week_day)$stats %>% t()
median_test(users ~ as.factor(week_day),
data = java_35,
distribution = "exact")
library(learnr)
install.packages('learnr')
library(learnr)
library(ggplot2)
library(dplyr)
knitr::opts_chunk$set(echo = FALSE)
theme_set(theme_bw())
library(learnr)
library(ggplot2)
library(dplyr)
knitr::opts_chunk$set(echo = FALSE)
theme_set(theme_bw())
dados = tibble(x = 1:20)
linear = function(x = 0, a = 3, b = -5){
return(a*x + b)
}
resultado_linear = dados %>%
mutate(y = linear(x),
funcao = "linear")
resultado_linear %>%
ggplot(aes(x = x, y = y)) +
geom_point() +
geom_line()
dados = tibble(x = 1:20)
linear = function(x = 0, a = 3, b = -5){
return(a*x + b)
}
funcoes = tibble(a = c(1, 2, 3),
b = c(3, 2, 1))
d = funcoes %>%
rowwise() %>% # para cada linha da tabela, que contém um a e um b
do(tibble(x = dados$x,
y = linear(dados$x, .$a, .$b), # aplica a função a dados$x
função = paste0("y = ", .$a, "x + ",.$b)))
d %>%
ggplot(aes(x = x, y = y, colour = `função`)) +
geom_line()
dados = tibble(x = 1:20)
polinomial = function(x = 0, a = 3, b = -5, c = 2){
return(a*x^c + b)
}
funcoes = tibble(a = c(.1, .2, .3),
b = c(-3, -2, -1),
c = c(2, 2.3, 2.7))
d = funcoes %>%
rowwise() %>% # para cada linha da tabela
do(tibble(x = dados$x,
y = polinomial(dados$x, .$a, .$b, .$c), # aplica a função a dados$x
função = paste0("y = ", .$a, "x^", .$c, " + ",.$b)))
d %>%
ggplot(aes(x = x, y = y, colour = `função`)) +
geom_line()
dados = tibble(x = 1:20)
linear = function(x = 0, a = 3, b = -5){
return(a*x + b)
}
polinomial = function(x = 0, a = 3, b = -5, c = 2){
return(a*x^c + b)
}
resultado_linear = dados %>%
mutate(y = linear(x),
funcao = "linear")
resultado_poli = dados %>%
mutate(y = polinomial(x),
funcao = "polinomial")
aplicacao_funcoes = bind_rows(resultado_linear, resultado_poli)
aplicacao_funcoes %>%
ggplot(aes(x = x, y = y, color = funcao)) +
geom_point() +
geom_line()
dados = tibble(x = 1:20)
exponencial = function(x = 0, a = 3, b = -5, c = 2){
return(a*2^(c*x) + b) # 2 poderia ser um novo coeficiente, mas já temos suficientes
}
funcoes = tibble(a = c(.1, .1, 1),
b = c(-3, -2, 4),
c = c(.2, .3, -.4))
d = funcoes %>%
rowwise() %>% # para cada linha da tabela
do(tibble(x = dados$x,
y = exponencial(dados$x, .$a, .$b, .$c), # aplica a função a dados$x
função = paste0("y = ", .$a, "2^x*", .$c, " + ",.$b)))
d %>%
ggplot(aes(x = x, y = y, colour = `função`)) +
geom_line()
dados = tibble(x = 1:15)
linear = function(x = 0, a = 3, b = 0){
return(a*x + b)
}
polinomial = function(x = 0, a = 3, b = 0, c = 2){
return(a*x^c + b)
}
exponencial = function(x = 0, a = .003, b = 0, c = 1.2){
return(a*2^(c*x) + b) # 2 poderia ser um novo coeficiente, mas já temos suficientes
}
resultado_linear = dados %>%
mutate(y = linear(x),
funcao = "linear")
resultado_poli = dados %>%
mutate(y = polinomial(x),
funcao = "polinomial")
resultado_exp = dados %>%
mutate(y = exponencial(x),
funcao = "exponencial")
aplicacao_funcoes = bind_rows(resultado_linear, resultado_poli, resultado_exp)
aplicacao_funcoes %>%
ggplot(aes(x = x, y = y, color = funcao)) +
geom_point() +
geom_line() #+ scale_y_log10()
knitr::opts_chunk$set(echo = TRUE)
dados_github <- read.csv("../dados/speed-dating2.csv")
pwd
getwd()
setwd("/home/gustavonsy/Documentos/Analise-de-Dados")
```{r}
dados_github <- read.csv("../dados/speed-dating2.csv")
knitr::opts_chunk$set(echo = TRUE)
dados <- read.csv("../dados/speed-dating2.csv")
View(dados)
dados <- read.csv("../dados/speed-dating.csv")
View(dados)
library(dplyr)
library(plotly)
library(ggplot2)
library(tidyr)
library(readr)
library(lubridate)
library(resample)
library(coin)
dados <- read.csv("../dados/speed-dating.csv")
View(dados)
dados_mulheres <- dados %>%
filter(gender == 0)
dados_homens <- dados %>%
filter(gender == 1)
ggplot(dados, aes(x = like, y =attr)) %>%
geopint(alpha = 0.4)
dados_mulheres <- dados %>%
filter(gender == 0)
dados_homens <- dados %>%
filter(gender == 1)
ggplot(dados, aes(x = like, y =attr)) %>%
geopoint(alpha = 0.4)
ggplot(dados, aes(x = like, y =attr)) %>%
geom_point(alpha = 0.4)
ggplot(dados, aes(x = like, y = attr)) %>%
geom_point(alpha = 0.4)
ggplot(dados, aes(x = attr, y = like)) %>%
geom_point(alpha = 0.4)
library(dplyr)
library(plotly)
library(ggplot2)
library(tidyr)
library(readr)
library(lubridate)
library(resample)
library(coin)
dados <- read.csv("../dados/speed-dating.csv")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(plotly)
library(ggplot2)
library(tidyr)
library(readr)
library(lubridate)
library(resample)
library(coin)
dados <- read.csv("../dados/speed-dating.csv")
dados_mulheres <- dados %>%
filter(gender == 0)
dados_homens <- dados %>%
filter(gender == 1)
ggplot(dados, aes(x = attr, y = like)) %>%
geom_point(alpha = 0.4)
dados_mulheres <- dados %>%
filter(gender == 0)
dados_homens <- dados %>%
filter(gender == 1)
ggplot(dados, aes(x = attr, y = like)) +
geom_point(alpha = 0.4)
View(dados)
dados <- read.csv("../dados/speed-dating.csv") %>%
distinct(dados, gender)
dados <- read.csv("../dados/speed-dating.csv") %>%
distinct(dados, gender)
dados <- read.csv("../dados/speed-dating.csv") %>%
a <- distinct(dados, gender)
dados <- read.csv("../dados/speed-dating.csv")
a <- distinct(dados, gender)
distinct(dados, gender)
dados <- read.csv("../dados/speed-dating.csv")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(plotly)
library(ggplot2)
library(tidyr)
library(readr)
library(lubridate)
library(resample)
library(coin)
dados <- read.csv("../dados/speed-dating.csv")
dados_mulheres <- dados %>%
filter(gender == 0)
dados_homens <- dados %>%
filter(gender == 1)
ggplot(dados, aes(x = attr, y = like)) +
geom_point(alpha = 0.4)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(plotly)
library(ggplot2)
library(tidyr)
library(readr)
library(lubridate)
library(resample)
library(coin)
dados <- read.csv("../dados/speed-dating.csv")
dados_mulheres <- dados %>%
filter(gender == 0)
dados_homens <- dados %>%
filter(gender == 1)
ggplot(dados, aes(x = attr, y = like)) +
geom_point(alpha = 0.4)
ggplot(dados_homens, aes(x = attr, y = like)) +
geom_point(alpha = 0.4)
ggplot(dados_mulheres, aes(x = attr, y = like)) +
geom_point(alpha = 0.4)
ggplot(dados_homens, aes(x = attr, y = like))
+
geom_point(alpha = 0.4)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(plotly)
library(ggplot2)
library(tidyr)
library(readr)
library(lubridate)
library(resample)
library(coin)
dados <- read.csv("../dados/speed-dating.csv")
dados_mulheres <- dados %>%
filter(gender == 0)
dados_homens <- dados %>%
filter(gender == 1)
ggplot(dados, aes(x = attr, y = like)) +
geom_point(alpha = 0.4)
ggplot(dados_homens, aes(x = attr, y = like)) +
geom_point(alpha = 0.4)
ggplot(dados_mulheres, aes(x = attr, y = like)) +
geom_point(alpha = 0.4)
